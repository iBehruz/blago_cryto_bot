
const Buy = require('./buy/buy');
const Base = require('./base');
const Session = require('../controllers/session.js');
const Msg = require('../controllers/msg');

class Start extends Base{
   static tx = '/start';

   text = `–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é ${Msg.get().from.first_name}!
   –£ —Ç–µ–±—è –±–æ–ª—å—à–æ–π –æ–±–º–µ–Ω?!
   –¢–æ–≥–¥–∞ —Ç—ã –ø–æ –∞–¥—Ä–µ—Å—É...
   
   –í–∞—à —Ç–µ–∫—É—â–∏–π –±–æ–Ω—É—Å: 0 —Å—É–º
   –í–∞—à–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—Å–ø–µ—à–Ω—ã—Ö —Å–¥–µ–ª–æ–∫: 0
   –ö–æ–º–∞–Ω–¥—ã /start /course /echo /help`;

   options = {
    reply_markup: {
      // selective: true,
      // one_time_keyboard: true,
      resize_keyboard: true,
      keyboard: [
        [{text: Buy.tx}, {text: "ü•á –ü—Ä–æ–¥–∞—Ç—å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É"}],
        [{text: "üü¢ –ú–æ–∏ –∞–∫—Ç–∏–≤–Ω—ã–µ —Å–¥–µ–ª–∫–∏"}],
        [{text: "üî¢ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä"}],
        [{text: "üë• –†–µ—Ñ–µ—Ä–∞–ª–∫–∞"}, {text: "üéÅ –ü—Ä–æ–º–æ–∫–æ–¥—ã"}],
        [{text: "üìò –ö–æ–Ω—Ç–∞–∫—Ç—ã"}, {text: "üì≠ –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤"}],
      ],
    }};


    available_cr = {
      "BUY": new Buy()
    };
    constructor(){
      super();
      this.init();
    }
    handleMsg(){

      if(Msg.get().text == Base.backCrText && this.backCr != null){
        return  Session.setCurrent(this.backCr);
      }

      for(let cd in this.available_cr){
        if(this.available_cr[cd].tx == Msg.get().text){
          return  Session.setCurrent(this.available_cr[cd]);
        }
      }

      return false;
    }

}

  module.exports = Start;
